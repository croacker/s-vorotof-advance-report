version: "3.7"
services:

  # БД
  db-vorotof:
    image: postgres:12-alpine
    container_name: db-vorotof
    hostname: db-vorotof
    restart: always
    ports:
      - "5433:5432"
    environment:
      TZ: "Asia/Irkutsk"
      POSTGRES_USER: vorotof
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: vorotof
      PGDATA: /var/lib/postgresql/data/vorotof
    volumes:
      - postgres-vorotof-advance-report:/var/lib/postgresql/data/vorotof
    command: ["-c", "shared_buffers=256MB", "-c", "max_connections=200"]
    networks:
      - vorotof-advance-report
    healthcheck:
      test: PGPASSWORD=vorotof psql -d vorotof -U vorotof -w -c '\q'
      interval: 20s
      timeout: 10s

  app-vorotof:
    container_name: app-vorotof
    hostname: app-vorotof
    image: croacker/s-vorotof-advance-report:${VOROTOF_ADVANCE_REPORT_VERSION}
    restart: always
    ports:
      - 17501:8080
    environment:
      DB_HOST: db-vorotof
      DB_PORT: 5433
      DB_NAME: vorotof
      DB_USERNAME: vorotof
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
    depends_on:
       - db-vorotof
    networks:
       - vorotof-advance-report

networks:
  vorotof-advance-report:
    driver: bridge

volumes:
  postgres-vorotof-advance-report:
    external: false
  pgadmindata:
